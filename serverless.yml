# serverless.yml
org: alexs29
app: agendazap
service: agendazap-backend

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  httpApi:
    cors:
      allowedOrigins:
        - "*"
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - OPTIONS
        - GET
        - POST
        - PUT
        - DELETE
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::Join:
              - ""
              - - Fn::GetAtt: [UsersTable, Arn]
                - "/index/EmailIndex"
            - Fn::GetAtt: [PatientsTable, Arn]
            - Fn::GetAtt: [surveyStates, Arn]

  environment:
    USERS_TABLE: users-table-${self:provider.stage}
    PATIENTS_TABLE: PatientsTable-${self:provider.stage}
    JWT_SECRET: dev_jwt_secret
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
    ACCOUNT_SID_TWILIO: ${env:ACCOUNT_SID_TWILIO}
    AUTH_TOKEN_TWILIO: ${env:AUTH_TOKEN_TWILIO}

package:
  individually: false
  excludeDevDependencies: true
  exclude:
    - "**/*.test.js"
    - "tests/**"
    - ".git/**"
    - "node_modules/.bin/**"
    - "node_modules/@types/**"
    - "node_modules/@aws-sdk/**"
    - "node_modules/typescript/**"

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: node20
    platform: node
    concurrency: 10

functions:
  checkEvents:
    handler: handler.checkEvents
    events:
      - schedule:
          rate: rate(1 day)
      - httpApi:
          path: /checkEvents
          method: get

  googleCalendarAuth:
    handler: handler.googleCalendarAuth
    events:
      - httpApi:
          path: /google/auth
          method: get

  oauth2callback:
    handler: handler.oauth2callback
    events:
      - httpApi:
          path: /oauth2callback
          method: get

  createEvent:
    handler: handler.createEvent
    events:
      - httpApi:
          path: /events
          method: post

  listEvents:
    handler: handler.listEvents
    events:
      - httpApi:
          path: /events
          method: get

  sendConfirmation2Days:
    handler: handler.sendConfirmation2Days
    events:
      - httpApi:
          path: /confirmation2days/send
          method: get

  sendConfirmation7Days:
    handler: handler.sendConfirmation7Days
    events:
      - httpApi:
          path: /confirmation7days/send
          method: get

  sendSupportNotifications:
    handler: handler.sendSupportNotifications
    events:
      - httpApi:
          path: /support/send
          method: get

  demoReply:
    handler: handler.demoReply
    events:
      - httpApi:
          path: /demo-reply
          method: post
  listSentMessagesToday:
    handler: handler.listSentMessagesToday
    events:
      - httpApi:
          path: /messages/sent-today
          method: get

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users-table-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    PatientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PatientsTable-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: telefone_whatsapp
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ByTelefone
            KeySchema:
              - AttributeName: telefone_whatsapp
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    surveyStates:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: surveyStates
        AttributeDefinitions:
          - AttributeName: phone
            AttributeType: S
        KeySchema:
          - AttributeName: phone
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
